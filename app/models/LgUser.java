package models;
// Generated Jun 26, 2012 9:57:59 PM by Hibernate Tools 3.2.1.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * LgUser generated by hbm2java
 */
@Entity
@Table( name = "lg_user", schema = "public" )
public class LgUser implements java.io.Serializable {

    private int userId;
    private LgExternalApp lgExternalApp;
    private String username;
    private String password;
    private String externalId;
    private char locked;
    private Date creationDate;
    private Date endDate;
    private Set<LgRole> lgRoles = new HashSet<LgRole>( 0 );
    private Set<LgUserProperty> lgUserProperties = new HashSet<LgUserProperty>( 0 );

    public LgUser() {
    }

    public LgUser( int userId, LgExternalApp lgExternalApp, String username, String password, String externalId, char locked, Date creationDate, Date endDate ) {
        this.userId = userId;
        this.lgExternalApp = lgExternalApp;
        this.username = username;
        this.password = password;
        this.externalId = externalId;
        this.locked = locked;
        this.creationDate = creationDate;
        this.endDate = endDate;
    }

    public LgUser( int userId, LgExternalApp lgExternalApp, String username, String password, String externalId, char locked, Date creationDate, Date endDate, Set<LgRole> lgRoles, Set<LgUserProperty> lgUserProperties ) {
        this.userId = userId;
        this.lgExternalApp = lgExternalApp;
        this.username = username;
        this.password = password;
        this.externalId = externalId;
        this.locked = locked;
        this.creationDate = creationDate;
        this.endDate = endDate;
        this.lgRoles = lgRoles;
        this.lgUserProperties = lgUserProperties;
    }

    @Id
    @Column( name = "user_id", unique = true, nullable = false )
    public int getUserId() {
        return this.userId;
    }

    public void setUserId( int userId ) {
        this.userId = userId;
    }

    @ManyToOne( fetch = FetchType.LAZY )
    @JoinColumn( name = "external_app_id", nullable = false )
    public LgExternalApp getLgExternalApp() {
        return this.lgExternalApp;
    }

    public void setLgExternalApp( LgExternalApp lgExternalApp ) {
        this.lgExternalApp = lgExternalApp;
    }

    @Column( name = "username", nullable = false, length = 128 )
    public String getUsername() {
        return this.username;
    }

    public void setUsername( String username ) {
        this.username = username;
    }

    @Column( name = "password", nullable = false, length = 128 )
    public String getPassword() {
        return this.password;
    }

    public void setPassword( String password ) {
        this.password = password;
    }

    @Column( name = "external_id", nullable = false, length = 32 )
    public String getExternalId() {
        return this.externalId;
    }

    public void setExternalId( String externalId ) {
        this.externalId = externalId;
    }

    @Column( name = "locked", nullable = false, length = 1 )
    public char getLocked() {
        return this.locked;
    }

    public void setLocked( char locked ) {
        this.locked = locked;
    }

    @Temporal( TemporalType.DATE )
    @Column( name = "creation_date", nullable = false, length = 13 )
    public Date getCreationDate() {
        return this.creationDate;
    }

    public void setCreationDate( Date creationDate ) {
        this.creationDate = creationDate;
    }

    @Temporal( TemporalType.DATE )
    @Column( name = "end_date", nullable = false, length = 13 )
    public Date getEndDate() {
        return this.endDate;
    }

    public void setEndDate( Date endDate ) {
        this.endDate = endDate;
    }

    @ManyToMany( cascade = CascadeType.ALL, fetch = FetchType.LAZY )
    @JoinTable( name = "lg_user_role", schema = "public", joinColumns = {
        @JoinColumn( name = "user_id", nullable = false, updatable = false ) }, inverseJoinColumns = {
        @JoinColumn( name = "role_id", nullable = false, updatable = false ) } )
    public Set<LgRole> getLgRoles() {
        return this.lgRoles;
    }

    public void setLgRoles( Set<LgRole> lgRoles ) {
        this.lgRoles = lgRoles;
    }

    @OneToMany( cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "lgUser" )
    public Set<LgUserProperty> getLgUserProperties() {
        return this.lgUserProperties;
    }

    public void setLgUserProperties( Set<LgUserProperty> lgUserProperties ) {
        this.lgUserProperties = lgUserProperties;
    }
}
